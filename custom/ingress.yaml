apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: monitoring-ingress-alb
  namespace: monitoring
  # https://kubernetes-sigs.github.io/aws-alb-ingress-controller/guide/ingress/annotation/
  annotations:
    # necessary
    kubernetes.io/ingress.class: alb
    # 面向外网， necessary
    alb.ingress.kubernetes.io/scheme: internet-facing
    # 支持http & https
    # (开放HTTPS后，alb会自动寻找并绑定arn下的ELBSecurityPolicy & SSL Certificate。保险起见，我们最好去aws的load balancers检查一下)
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80},{"HTTPS":443}]'
    # 设置为ip，alb直接将请求负载均衡后打到后端pod上
    # instance类型仅能供type为NodePort的service使用
    alb.ingress.kubernetes.io/target-type: ip
    # hack， action.xxx 的 xxx 是下方的serviceName
    #    alb.ingress.kubernetes.io/actions.response-200: >
    #      {"Type":"fixed-response","FixedResponseConfig":{"ContentType":"text/plain","StatusCode":"200","MessageBody":"ok"}}
    alb.ingress.kubernetes.io/load-balancer-attributes: access_logs.s3.enabled=false
spec:
  rules:
    - host: "alpha-eks-prometheus.zenkube.com"
      http:
        paths:
          - path: /*
            pathType: ImplementationSpecific
            backend:
              service:
                name: prometheus-k8s
                port:
                  number: 9090
    - host: "alpha-eks-grafana.zenkube.com"
      http:
        paths:
          - path: /*
            pathType: ImplementationSpecific
            backend:
              service:
                name: grafana
                port:
                  number: 3000
    - host: "alpha-eks-alertmanager.zenkube.com"
      http:
        paths:
          - path: /*
            pathType: ImplementationSpecific
            backend:
              service:
                name: alertmanager-main
                port:
                  number: 9093
